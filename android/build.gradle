group = "com.example.amps_sdk"
version = "1.0-SNAPSHOT"
String mavenLocalRepoPath = "${rootProject.projectDir.toURI()}/m2repository"
new File(mavenLocalRepoPath).mkdirs()
buildscript {
    ext.kotlin_version = "2.1.0"
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.10.1")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven {
            name = "myrepo"
            url = uri("file:///${mavenLocalRepoPath}")
        }
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "maven-publish"
android {
    namespace = "com.example.amps_sdk"

    compileSdk = 36

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    buildFeatures {
        viewBinding true
    }
    
    defaultConfig {
        minSdk = 24
    }

    dependencies {
        //compileOnly fileTree(dir: 'libs', include: '*.aar')
//        // 依赖第一个 AAR (amps-sdk)
        api ('com.example:amps-sdk:1.1')
//        // 依赖第二个 AAR (common)
        api ('com.example:common:1.1')
        implementation ('androidx.annotation:annotation:1.8.0')
        implementation ('androidx.appcompat:appcompat:1.7.1')
        implementation ('com.google.android.material:material:1.13.0')
        testImplementation ('junit:junit:4.13.2')
        androidTestImplementation ('androidx.test.ext:junit:1.3.0')
        androidTestImplementation ('androidx.test.espresso:espresso-core:3.7.0')
        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.19.0")
        // 添加下面这行代码来修复 NoClassDefFoundError
        implementation ("androidx.localbroadcastmanager:localbroadcastmanager:1.1.0")
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'com.google.android.material:material:1.13.0'
    implementation 'androidx.activity:activity:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
}